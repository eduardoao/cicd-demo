name: cicd-demo
on:
  push:
    branches:
      - '*'
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - name: 'Start build job'
        run: |
          echo "Starting the build job."

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Check Java Version'
        run: |
          java --version

      - name: 'Run Tests'
        run: |
            ./gradlew test

      - name: 'Publish Test Report'
        if: always()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'test-report'
          path: build/reports/tests/test/*

      - name: 'Assemble JAR'
        run: |
          ./gradlew assemble

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'cicd-demo-${{env.VERSION}}-all.jar'
          path: build/libs/*-all.jar

      - name: 'Login To OCIR'
        uses: docker/login-action@v1
        with:
          registry: phx.ocir.io
          username: ${{secrets.OCIR_USERNAME}}
          password: ${{secrets.OCIR_PASSWORD}}

      - name: 'Docker Build'
        run: |
          ./gradlew dockerfile
          ./gradlew dockerBuild

      - name: 'Docker Push'
        run: |
          ./gradlew dockerPush

      - name: 'Create Password Secret'
        uses: steebchen/kubectl@master
        with:
          config: ${{secrets.OKE_KUBE_CONFIG}}
          command: "create secret generic cicd-secrets --from-literal=dbUsername='${{secrets.DATASOURCE_USERNAME}}' --from-literal=dbPassword='${{secrets.DATASOURCE_PASSWORD}}' --from-literal=dbWalletPassword='${{secrets.DATASOURCE_WALLET_PASSWORD}}' --from-literal=dbOcid='${{secrets.DATASOURCE_OCID}}' --save-config --dry-run -o yaml | kubectl apply -f -"

      - name: 'Deploy To Kubernetes'
        uses: steebchen/kubectl@master
        with:
          config: ${{secrets.OKE_KUBE_CONFIG}}
          command: '"apply -f ./k8s/app.yaml"'

      - name: 'Kill Pod'
        uses: steebchen/kubectl@master
        with:
          config: ${{secrets.OKE_KUBE_CONFIG}}
          command: '"delete pod $(kubectl get pod -l app=cicd_demo -o jsonpath="{.items[0].metadata.name}")"'




